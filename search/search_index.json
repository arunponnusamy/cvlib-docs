{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to cvlib documentation cvlib is a simple, high level, easy to use, open source Computer Vision library for Python. It was developed with a focus on enabling easy and fast experimentation. Being able to go from an idea to prototype with least amount of delay is key to doing good research. Guiding principles of cvlib are heavily inspired from Keras (deep learning library). simplicity user friendliness modularity and extensibility This documentation is currently a work in progress. For now, to know more about what cvlib can do please visit the github repository.","title":"Home"},{"location":"#welcome-to-cvlib-documentation","text":"cvlib is a simple, high level, easy to use, open source Computer Vision library for Python. It was developed with a focus on enabling easy and fast experimentation. Being able to go from an idea to prototype with least amount of delay is key to doing good research. Guiding principles of cvlib are heavily inspired from Keras (deep learning library). simplicity user friendliness modularity and extensibility This documentation is currently a work in progress. For now, to know more about what cvlib can do please visit the github repository.","title":"Welcome to cvlib documentation"},{"location":"face_detection/","text":"detect_face detect_face(image, threshold=0.5, enable_gpu=False) Arguments image: input image (numpy array, BGR order, dtype - uint8 ) threshold: confidence threshold to filter the detections (ranges from 0 to 1. default value 0.5) enable_gpu: flag to use available GPU (if you have compiled OpenCV with CUDA from source) Returns faces: list of list containing bounding box co-ordinates for each detected face. confidences: list of confidence scores for each detected face.","title":"Face Detection"},{"location":"face_detection/#detect_face","text":"detect_face(image, threshold=0.5, enable_gpu=False) Arguments image: input image (numpy array, BGR order, dtype - uint8 ) threshold: confidence threshold to filter the detections (ranges from 0 to 1. default value 0.5) enable_gpu: flag to use available GPU (if you have compiled OpenCV with CUDA from source) Returns faces: list of list containing bounding box co-ordinates for each detected face. confidences: list of confidence scores for each detected face.","title":"detect_face"},{"location":"gender_detection/","text":"detect_gender detect_gender(face, enable_gpu=False) Arguments face: cropped face region (numpy array, BGR order, dtype - uint8 ) enable_gpu: flag to use available GPU (if you have compiled OpenCV with CUDA from source) Returns labels: list of labels. ['male', 'female'] confidences: list of confidence score for each label (float, between 0 to 1).","title":"Gender Detection"},{"location":"gender_detection/#detect_gender","text":"detect_gender(face, enable_gpu=False) Arguments face: cropped face region (numpy array, BGR order, dtype - uint8 ) enable_gpu: flag to use available GPU (if you have compiled OpenCV with CUDA from source) Returns labels: list of labels. ['male', 'female'] confidences: list of confidence score for each label (float, between 0 to 1).","title":"detect_gender"}]}